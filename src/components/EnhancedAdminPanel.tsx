
import React, { useState } from 'react';
import { Button } from '@/components/ui/button';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Dialog, DialogContent, DialogHeader, DialogTitle } from '@/components/ui/dialog';
import { 
  Download, 
  Upload, 
  BarChart3, 
  Database, 
  Users, 
  Shield, 
  Settings,
  RefreshCw,
  FileText,
  Activity,
  Plus,
  Edit,
  Trash2,
  Eye,
  BookOpen,
  Server,
  Mail,
  Zap,
  Monitor
} from 'lucide-react';
import { useProgress } from '@/context/ProgressContext';
import { useTheme } from '@/context/ThemeContext';
import { AdminStats } from './AdminStats';
import { CourseEditor } from './CourseEditor';

export const EnhancedAdminPanel = () => {
  const { courses, resetAllProgress, setCourses } = useProgress();
  const { currentTheme } = useTheme();
  const [lastAction, setLastAction] = useState<string>('');
  const [showCourseEditor, setShowCourseEditor] = useState(false);
  const [editingCourse, setEditingCourse] = useState<any>(null);
  const [previewCourse, setPreviewCourse] = useState<any>(null);
  const [showPreview, setShowPreview] = useState(false);

  const showStatus = (message: string, duration: number = 3000) => {
    setLastAction(message);
    setTimeout(() => setLastAction(''), duration);
  };

  const handleExportData = () => {
    const data = {
      courses,
      exportDate: new Date().toISOString(),
      version: '1.0'
    };
    const blob = new Blob([JSON.stringify(data, null, 2)], { type: 'application/json' });
    const url = URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = `learnhub-export-${new Date().toISOString().split('T')[0]}.json`;
    a.click();
    URL.revokeObjectURL(url);
    showStatus('‚úÖ –î–∞–Ω–Ω—ã–µ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã');
  };

  const handleImportData = () => {
    const input = document.createElement('input');
    input.type = 'file';
    input.accept = '.json';
    input.onchange = (e) => {
      const file = (e.target as HTMLInputElement).files?.[0];
      if (file) {
        const reader = new FileReader();
        reader.onload = (e) => {
          try {
            const data = JSON.parse(e.target?.result as string);
            if (data.courses) {
              setCourses(data.courses);
              showStatus('‚úÖ –î–∞–Ω–Ω—ã–µ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã');
            }
          } catch (error) {
            showStatus('‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞');
          }
        };
        reader.readAsText(file);
      }
    };
    input.click();
  };

  const handleCreateCourse = () => {
    setEditingCourse(null);
    setShowCourseEditor(true);
  };

  const handleEditCourse = (course: any) => {
    setEditingCourse(course);
    setShowCourseEditor(true);
  };

  const handlePreviewCourse = (course: any) => {
    setPreviewCourse(course);
    setShowPreview(true);
  };

  const handleDeleteCourse = (courseId: number) => {
    if (confirm('–£–¥–∞–ª–∏—Ç—å —ç—Ç–æ—Ç –∫—É—Ä—Å?')) {
      setCourses(prev => prev.filter(c => c.id !== courseId));
      showStatus('‚úÖ –ö—É—Ä—Å —É–¥–∞–ª–µ–Ω');
    }
  };

  const handleSaveCourse = (courseData: any) => {
    if (editingCourse) {
      setCourses(prev => prev.map(c => c.id === editingCourse.id ? { ...c, ...courseData } : c));
      showStatus('‚úÖ –ö—É—Ä—Å –æ–±–Ω–æ–≤–ª–µ–Ω');
    } else {
      const newCourse = {
        id: Math.max(...courses.map(c => c.id), 0) + 1,
        progress: 0,
        completedLessons: 0,
        ...courseData
      };
      setCourses(prev => [...prev, newCourse]);
      showStatus('‚úÖ –ö—É—Ä—Å —Å–æ–∑–¥–∞–Ω');
    }
    setShowCourseEditor(false);
  };

  const handleSystemMaintenance = () => {
    showStatus('üîß –û–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã...', 2000);
    setTimeout(() => {
      Object.keys(localStorage).forEach(key => {
        if (key.includes('_old') || key.includes('_temp')) {
          localStorage.removeItem(key);
        }
      });
      showStatus('‚úÖ –û–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ');
    }, 2000);
  };

  const handleUserManagement = () => {
    showStatus('üë• –û—Ç–∫—Ä—ã—Ç–∏–µ –ø–∞–Ω–µ–ª–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏...');
    setTimeout(() => showStatus('üë• –§—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ'), 1500);
  };

  const handleSystemMonitoring = () => {
    showStatus('üìä –ó–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞...');
    setTimeout(() => showStatus('üìä –í—Å–µ —Å–∏—Å—Ç–µ–º—ã —Ä–∞–±–æ—Ç–∞—é—Ç –Ω–æ—Ä–º–∞–ª—å–Ω–æ'), 2000);
  };

  const handleEmailNotifications = () => {
    showStatus('üìß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ email —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π...');
    setTimeout(() => showStatus('üìß Email —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã'), 1500);
  };

  const handlePerformanceOptimization = () => {
    showStatus('‚ö° –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏...');
    setTimeout(() => {
      // –û—á–∏—Å—Ç–∫–∞ –∫–µ—à–∞ –±—Ä–∞—É–∑–µ—Ä–∞ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
      if ('caches' in window) {
        caches.keys().then(names => {
          names.forEach(name => caches.delete(name));
        });
      }
      showStatus('‚úÖ –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–∞');
    }, 2000);
  };

  const handleDatabaseBackup = () => {
    showStatus('üíæ –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏...');
    setTimeout(() => {
      const backupData = {
        courses,
        timestamp: new Date().toISOString(),
        type: 'backup'
      };
      localStorage.setItem(`backup_${Date.now()}`, JSON.stringify(backupData));
      showStatus('‚úÖ –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Å–æ–∑–¥–∞–Ω–∞');
    }, 1500);
  };

  const handleSecurityAudit = () => {
    showStatus('üõ°Ô∏è –ü—Ä–æ–≤–µ–¥–µ–Ω–∏–µ –∞—É–¥–∏—Ç–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏...');
    setTimeout(() => {
      const securityChecks = [
        '–ü—Ä–æ–≤–µ—Ä–∫–∞ XSS —É—è–∑–≤–∏–º–æ—Å—Ç–µ–π',
        '–ê–Ω–∞–ª–∏–∑ CSRF –∑–∞—â–∏—Ç—ã', 
        '–í–∞–ª–∏–¥–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –≤–≤–æ–¥–∞',
        '–ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏'
      ];
      showStatus('üõ°Ô∏è –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –ø—Ä–æ–π–¥–µ–Ω—ã');
    }, 3000);
  };

  return (
    <div className="space-y-8 animate-fade-in">
      <div className="flex items-center justify-between">
        <div>
          <h2 className={`text-3xl font-light ${currentTheme.foreground} mb-2`}>
            –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –ø–∞–Ω–µ–ª—å <span className={`font-bold bg-gradient-to-r ${currentTheme.primary} bg-clip-text text-transparent`}>—É–ø—Ä–∞–≤–ª–µ–Ω–∏—è</span>
          </h2>
          <p className={currentTheme.muted}>–ü–æ–ª–Ω–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º–æ–π LearnHub</p>
        </div>
        {lastAction && (
          <div className={`px-4 py-2 bg-gradient-to-r ${currentTheme.primary}/20 border ${currentTheme.border} rounded-xl text-sm ${currentTheme.foreground}`}>
            {lastAction}
          </div>
        )}
      </div>

      <AdminStats />

      {/* Course Management */}
      <Card className={`${currentTheme.cardBg} ${currentTheme.border} backdrop-blur-lg`}>
        <CardHeader>
          <CardTitle className={`${currentTheme.foreground} flex items-center gap-2`}>
            <BookOpen className="w-5 h-5" />
            –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫—É—Ä—Å–∞–º–∏
          </CardTitle>
        </CardHeader>
        <CardContent>
          <div className="space-y-4">
            <Button 
              onClick={handleCreateCourse}
              className={`bg-gradient-to-r ${currentTheme.primary} hover:opacity-90 transition-all duration-200`}
            >
              <Plus className="w-4 h-4 mr-2" />
              –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –∫—É—Ä—Å
            </Button>
            
            <div className="grid gap-4">
              {courses.map((course) => (
                <div key={course.id} className={`flex items-center justify-between p-4 ${currentTheme.cardBg} rounded-lg ${currentTheme.border} border`}>
                  <div className="flex items-center space-x-4">
                    <div className="text-2xl">{course.badge}</div>
                    <div>
                      <h4 className={`${currentTheme.foreground} font-medium`}>{course.title}</h4>
                      <p className={`${currentTheme.muted} text-sm`}>–ê–≤—Ç–æ—Ä: {course.author}</p>
                      <p className={`${currentTheme.muted} text-xs`}>{course.lessons} —É—Ä–æ–∫–æ–≤ ‚Ä¢ {course.xp} XP</p>
                    </div>
                  </div>
                  <div className="flex space-x-2">
                    <Button 
                      size="sm" 
                      variant="outline" 
                      onClick={() => handlePreviewCourse(course)}
                      className={`${currentTheme.cardBg} ${currentTheme.border} ${currentTheme.foreground} hover:bg-white/10`}
                    >
                      <Eye className="w-4 h-4" />
                    </Button>
                    <Button 
                      size="sm" 
                      variant="outline" 
                      onClick={() => handleEditCourse(course)}
                      className={`${currentTheme.cardBg} ${currentTheme.border} ${currentTheme.foreground} hover:bg-white/10`}
                    >
                      <Edit className="w-4 h-4" />
                    </Button>
                    <Button 
                      size="sm" 
                      variant="outline" 
                      onClick={() => handleDeleteCourse(course.id)}
                      className="bg-red-500/20 border-red-400/30 text-red-300 hover:bg-red-500/30"
                    >
                      <Trash2 className="w-4 h-4" />
                    </Button>
                  </div>
                </div>
              ))}
            </div>
          </div>
        </CardContent>
      </Card>

      {/* System Management Tools */}
      <Card className={`${currentTheme.cardBg} ${currentTheme.border} backdrop-blur-lg`}>
        <CardHeader>
          <CardTitle className={`${currentTheme.foreground} flex items-center gap-2`}>
            <Settings className="w-5 h-5" />
            –°–∏—Å—Ç–µ–º–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã
          </CardTitle>
        </CardHeader>
        <CardContent>
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4">
            <Button 
              variant="outline" 
              onClick={handleExportData}
              className={`${currentTheme.cardBg} ${currentTheme.border} ${currentTheme.foreground} hover:bg-white/10 h-auto p-4 flex-col transition-all duration-200`}
            >
              <Download className="w-6 h-6 mb-2" />
              <span className="font-medium">–≠–∫—Å–ø–æ—Ä—Ç</span>
              <span className="text-xs opacity-80">–°–∫–∞—á–∞—Ç—å –¥–∞–Ω–Ω—ã–µ</span>
            </Button>
            
            <Button 
              variant="outline" 
              onClick={handleImportData}
              className={`${currentTheme.cardBg} ${currentTheme.border} ${currentTheme.foreground} hover:bg-white/10 h-auto p-4 flex-col transition-all duration-200`}
            >
              <Upload className="w-6 h-6 mb-2" />
              <span className="font-medium">–ò–º–ø–æ—Ä—Ç</span>
              <span className="text-xs opacity-80">–ó–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ</span>
            </Button>
            
            <Button 
              variant="outline" 
              onClick={handleUserManagement}
              className={`${currentTheme.cardBg} ${currentTheme.border} ${currentTheme.foreground} hover:bg-white/10 h-auto p-4 flex-col transition-all duration-200`}
            >
              <Users className="w-6 h-6 mb-2" />
              <span className="font-medium">–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏</span>
              <span className="text-xs opacity-80">–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ</span>
            </Button>

            <Button 
              variant="outline" 
              onClick={handleSystemMonitoring}
              className={`${currentTheme.cardBg} ${currentTheme.border} ${currentTheme.foreground} hover:bg-white/10 h-auto p-4 flex-col transition-all duration-200`}
            >
              <Monitor className="w-6 h-6 mb-2" />
              <span className="font-medium">–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥</span>
              <span className="text-xs opacity-80">–°–∏—Å—Ç–µ–º–∞</span>
            </Button>

            <Button 
              variant="outline" 
              onClick={handleEmailNotifications}
              className={`${currentTheme.cardBg} ${currentTheme.border} ${currentTheme.foreground} hover:bg-white/10 h-auto p-4 flex-col transition-all duration-200`}
            >
              <Mail className="w-6 h-6 mb-2" />
              <span className="font-medium">–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</span>
              <span className="text-xs opacity-80">Email</span>
            </Button>

            <Button 
              variant="outline" 
              onClick={handlePerformanceOptimization}
              className={`${currentTheme.cardBg} ${currentTheme.border} ${currentTheme.foreground} hover:bg-white/10 h-auto p-4 flex-col transition-all duration-200`}
            >
              <Zap className="w-6 h-6 mb-2" />
              <span className="font-medium">–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è</span>
              <span className="text-xs opacity-80">–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å</span>
            </Button>

            <Button 
              variant="outline" 
              onClick={handleDatabaseBackup}
              className={`${currentTheme.cardBg} ${currentTheme.border} ${currentTheme.foreground} hover:bg-white/10 h-auto p-4 flex-col transition-all duration-200`}
            >
              <Database className="w-6 h-6 mb-2" />
              <span className="font-medium">–ë—ç–∫–∞–ø</span>
              <span className="text-xs opacity-80">–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö</span>
            </Button>

            <Button 
              variant="outline" 
              onClick={handleSystemMaintenance}
              className={`${currentTheme.cardBg} ${currentTheme.border} ${currentTheme.foreground} hover:bg-white/10 h-auto p-4 flex-col transition-all duration-200`}
            >
              <Activity className="w-6 h-6 mb-2" />
              <span className="font-medium">–û–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ</span>
              <span className="text-xs opacity-80">–û—á–∏—Å—Ç–∫–∞</span>
            </Button>

            <Button 
              variant="outline" 
              onClick={() => {
                if (confirm('–°–±—Ä–æ—Å–∏—Ç—å –≤–µ—Å—å –ø—Ä–æ–≥—Ä–µ—Å—Å? –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å.')) {
                  resetAllProgress();
                  showStatus('‚úÖ –ü—Ä–æ–≥—Ä–µ—Å—Å —Å–±—Ä–æ—à–µ–Ω');
                }
              }}
              className={`${currentTheme.cardBg} border-red-400/30 text-red-300 hover:bg-red-500/20 h-auto p-4 flex-col transition-all duration-200`}
            >
              <RefreshCw className="w-6 h-6 mb-2" />
              <span className="font-medium">–°–±—Ä–æ—Å</span>
              <span className="text-xs opacity-80">–û—á–∏—Å—Ç–∏—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å</span>
            </Button>

            <Button 
              variant="outline" 
              onClick={handleSecurityAudit}
              className={`${currentTheme.cardBg} ${currentTheme.border} ${currentTheme.foreground} hover:bg-white/10 h-auto p-4 flex-col transition-all duration-200`}
            >
              <Shield className="w-6 h-6 mb-2" />
              <span className="font-medium">–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å</span>
              <span className="text-xs opacity-80">–ê—É–¥–∏—Ç</span>
            </Button>

            <Button 
              variant="outline" 
              onClick={() => showStatus('üìä –û—Ç—á–µ—Ç—ã –≥–µ–Ω–µ—Ä–∏—Ä—É—é—Ç—Å—è...')}
              className={`${currentTheme.cardBg} ${currentTheme.border} ${currentTheme.foreground} hover:bg-white/10 h-auto p-4 flex-col transition-all duration-200`}
            >
              <BarChart3 className="w-6 h-6 mb-2" />
              <span className="font-medium">–û—Ç—á–µ—Ç—ã</span>
              <span className="text-xs opacity-80">–ê–Ω–∞–ª–∏—Ç–∏–∫–∞</span>
            </Button>
          </div>
        </CardContent>
      </Card>

      {/* Course Preview Dialog */}
      {previewCourse && (
        <Dialog open={showPreview} onOpenChange={setShowPreview}>
          <DialogContent className="max-w-2xl bg-black/90 backdrop-blur-xl border border-white/20">
            <DialogHeader>
              <DialogTitle className="text-white flex items-center gap-3">
                <span className="text-2xl">{previewCourse.badge}</span>
                {previewCourse.title}
              </DialogTitle>
            </DialogHeader>
            <div className="space-y-4">
              <div className="flex gap-4">
                <img 
                  src={previewCourse.image} 
                  alt={previewCourse.title}
                  className="w-32 h-48 object-cover rounded-lg"
                />
                <div className="flex-1">
                  <p className="text-gray-300 mb-3">{previewCourse.description}</p>
                  <div className="space-y-2 text-sm">
                    <div className="flex justify-between">
                      <span className="text-gray-400">–ê–≤—Ç–æ—Ä:</span>
                      <span className="text-white">{previewCourse.author}</span>
                    </div>
                    <div className="flex justify-between">
                      <span className="text-gray-400">–£—Ä–æ–≤–µ–Ω—å:</span>
                      <span className="text-white">{previewCourse.level}</span>
                    </div>
                    <div className="flex justify-between">
                      <span className="text-gray-400">–£—Ä–æ–∫–æ–≤:</span>
                      <span className="text-white">{previewCourse.lessons}</span>
                    </div>
                    <div className="flex justify-between">
                      <span className="text-gray-400">–û–ø—ã—Ç:</span>
                      <span className="text-white">{previewCourse.xp} XP</span>
                    </div>
                    <div className="flex justify-between">
                      <span className="text-gray-400">–ü—Ä–æ–≥—Ä–µ—Å—Å:</span>
                      <span className="text-white">{previewCourse.progress}%</span>
                    </div>
                  </div>
                </div>
              </div>
              
              {previewCourse.fullLessons && previewCourse.fullLessons.length > 0 && (
                <div>
                  <h4 className="text-white font-medium mb-2">–£—Ä–æ–∫–∏ –∫—É—Ä—Å–∞:</h4>
                  <div className="space-y-2 max-h-40 overflow-y-auto">
                    {previewCourse.fullLessons.map((lesson: any, index: number) => (
                      <div key={lesson.id} className="flex items-center justify-between p-2 bg-white/5 rounded-lg">
                        <span className="text-white text-sm">
                          {index + 1}. {lesson.title}
                        </span>
                        <span className="text-gray-400 text-xs">{lesson.duration} –º–∏–Ω</span>
                      </div>
                    ))}
                  </div>
                </div>
              )}
            </div>
          </DialogContent>
        </Dialog>
      )}

      {showCourseEditor && (
        <CourseEditor
          course={editingCourse}
          onSave={handleSaveCourse}
          onClose={() => setShowCourseEditor(false)}
        />
      )}
    </div>
  );
};
